[
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 30,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "30",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/runtime.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "0",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "sourceMessageId": 16,
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "16",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/robots.txt",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "1",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 27,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "27",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "2",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "public, max-age=0",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "sourceMessageId": 17,
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "17",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "3",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "public, max-age=0",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "sourceMessageId": 18,
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "18",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/sitemap.xml",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "4",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 16,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "16",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/robots.txt",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "5",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 18,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "18",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/sitemap.xml",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "6",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 17,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "17",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "7",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 27,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "27",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "8",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 30,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "30",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/runtime.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "9",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 17,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "17",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "10",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 18,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "18",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/sitemap.xml",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "11",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 16,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "16",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/robots.txt",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "12",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "1741243258, which evaluates to: 2025-03-06 12:10:58.",
        "method": "GET",
        "evidence": "1741243258",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 30,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "30",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/runtime.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "13",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1741243258, which evaluates to: 2025-03-06 12:10:58.",
        "method": "GET",
        "evidence": "1741243258",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "14",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 17,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "17",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "15",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "1741243258, which evaluates to: 2025-03-06 12:10:58.",
        "method": "GET",
        "evidence": "1741243258",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 16,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "16",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/robots.txt",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "16",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 18,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "18",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/sitemap.xml",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "17",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 17,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "17",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "18",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 18,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "18",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/sitemap.xml",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "19",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 17,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "17",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "20",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 18,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "18",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/sitemap.xml",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "21",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 17,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "17",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "22",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 18,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "18",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/sitemap.xml",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "23",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "1741243258, which evaluates to: 2025-03-06 12:10:58.",
        "method": "GET",
        "evidence": "1741243258",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 17,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "17",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "24",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1741243258, which evaluates to: 2025-03-06 12:10:58.",
        "method": "GET",
        "evidence": "1741243258",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 18,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "18",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/sitemap.xml",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "25",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 31,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "31",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/polyfills.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "26",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 33,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "33",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/main.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "27",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 31,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "31",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/polyfills.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "28",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 32,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "32",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/styles.css",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "29",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "1741243258, which evaluates to: 2025-03-06 12:10:58.",
        "method": "GET",
        "evidence": "1741243258",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 31,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "31",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/polyfills.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "30",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "The following pattern was used: \\bQUERY\\b and was detected in likely comment: \"//w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/771984076&amp;color=%23ff5500&amp;auto&lowbar;play=true&amp;h\", see evidence field for the suspicious comment/snippet.",
        "method": "GET",
        "evidence": "query",
        "pluginId": "10027",
        "cweid": "615",
        "confidence": "Low",
        "sourceMessageId": 33,
        "wascid": "13",
        "description": "The response appears to contain suspicious comments which may help an attacker.",
        "messageId": "33",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/main.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "CWE-615": "https://cwe.mitre.org/data/definitions/615.html",
            "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"
        },
        "reference": "",
        "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.",
        "alert": "Information Disclosure - Suspicious Comments",
        "param": "",
        "attack": "",
        "name": "Information Disclosure - Suspicious Comments",
        "risk": "Informational",
        "id": "31",
        "alertRef": "10027"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 33,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "33",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/main.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "32",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "1741243258, which evaluates to: 2025-03-06 12:10:58.",
        "method": "GET",
        "evidence": "1741243258",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 33,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "33",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/main.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "33",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1734944650, which evaluates to: 2024-12-23 14:34:10.",
        "method": "GET",
        "evidence": "1734944650",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 33,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "33",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/main.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "34",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 32,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "32",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/styles.css",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "36",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "1741243258, which evaluates to: 2025-03-06 12:10:58.",
        "method": "GET",
        "evidence": "1741243258",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 32,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "32",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/styles.css",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "37",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 34,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "34",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/vendor.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "38",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "The following pattern was used: \\bQUERY\\b and was detected in likely comment: \"//bit.ly/2sd4HMP\\n*/\\n@media ${Fe} {.fx-query-test{ }}\\n`)),_t.head.appendChild(ye),kt.forEach(Pe=>R[Pe]=ye)}catch(ye){console.e\", see evidence field for the suspicious comment/snippet.",
        "method": "GET",
        "evidence": "query",
        "pluginId": "10027",
        "cweid": "615",
        "confidence": "Low",
        "sourceMessageId": 34,
        "wascid": "13",
        "description": "The response appears to contain suspicious comments which may help an attacker.",
        "messageId": "34",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/vendor.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "CWE-615": "https://cwe.mitre.org/data/definitions/615.html",
            "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"
        },
        "reference": "",
        "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.",
        "alert": "Information Disclosure - Suspicious Comments",
        "param": "",
        "attack": "",
        "name": "Information Disclosure - Suspicious Comments",
        "risk": "Informational",
        "id": "39",
        "alertRef": "10027"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 34,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "34",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/vendor.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "40",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "1741243258, which evaluates to: 2025-03-06 12:10:58.",
        "method": "GET",
        "evidence": "1741243258",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 34,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "34",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/vendor.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "41",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 86,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "86",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/order_4604-102231f7454181bc.pdf",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "42",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "public, max-age=0",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "sourceMessageId": 62,
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "62",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/acquisitions.md",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "43",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 55,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "55",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/eastere.gg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "44",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "public, max-age=0",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "sourceMessageId": 59,
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "59",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "45",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 59,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "59",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "46",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 62,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "62",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/acquisitions.md",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "47",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 55,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "55",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/eastere.gg",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "48",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 48,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "48",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/coupons_2013.md.bak",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "49",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 59,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "59",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "50",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "public, max-age=0",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "sourceMessageId": 80,
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "80",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:376:14",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "51",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 88,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "88",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/encrypt.pyc",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "52",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 62,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "62",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/acquisitions.md",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "53",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 86,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "86",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/order_4604-102231f7454181bc.pdf",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "54",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "public, max-age=0",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "sourceMessageId": 73,
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "73",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:328:13",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "55",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "public, max-age=0",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "sourceMessageId": 63,
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "63",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/fileServer.js:55:18",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "56",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 87,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "87",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/package.json.bak",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "57",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 48,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "48",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/coupons_2013.md.bak",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "58",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "public, max-age=0",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "sourceMessageId": 85,
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "85",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/legal.md",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "59",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 55,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "55",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/eastere.gg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "60",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "sourceMessageId": 35,
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "35",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "61",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 80,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "80",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:376:14",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "62",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "1741243264, which evaluates to: 2025-03-06 12:11:04.",
        "method": "GET",
        "evidence": "1741243264",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 62,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "62",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/acquisitions.md",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "63",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 59,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "59",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "64",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 88,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "88",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/encrypt.pyc",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "65",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "1741243264, which evaluates to: 2025-03-06 12:11:04.",
        "method": "GET",
        "evidence": "1741243264",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 86,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "86",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/order_4604-102231f7454181bc.pdf",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "66",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 73,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "73",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:328:13",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "67",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 63,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "63",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/fileServer.js:55:18",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "68",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 87,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "87",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/package.json.bak",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "69",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 85,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "85",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/legal.md",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "70",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 48,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "48",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/coupons_2013.md.bak",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "71",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "1741243264, which evaluates to: 2025-03-06 12:11:04.",
        "method": "GET",
        "evidence": "1741243264",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 55,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "55",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/eastere.gg",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "72",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 59,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "59",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "73",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 80,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "80",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:376:14",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "74",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 35,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "35",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "75",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 88,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "88",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/encrypt.pyc",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "76",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 73,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "73",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:328:13",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "77",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 63,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "63",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/fileServer.js:55:18",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "78",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 89,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "89",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/suspicious_errors.yml",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "79",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 90,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "90",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/incident-support.kdbx",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "80",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "1741243264, which evaluates to: 2025-03-06 12:11:04.",
        "method": "GET",
        "evidence": "1741243264",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 48,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "48",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/coupons_2013.md.bak",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "81",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 85,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "85",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/legal.md",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "82",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 87,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "87",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/package.json.bak",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "83",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 35,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "35",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "84",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 80,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "80",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:376:14",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "85",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 91,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "91",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "86",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 59,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "59",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "87",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "1741243264, which evaluates to: 2025-03-06 12:11:04.",
        "method": "GET",
        "evidence": "1741243264",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 88,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "88",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/encrypt.pyc",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "88",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 73,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "73",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:328:13",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "89",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 63,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "63",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/fileServer.js:55:18",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "90",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 89,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "89",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/suspicious_errors.yml",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "91",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 90,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "90",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/incident-support.kdbx",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "92",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "1741243264, which evaluates to: 2025-03-06 12:11:04.",
        "method": "GET",
        "evidence": "1741243264",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 87,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "87",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/package.json.bak",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "93",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1741243264, which evaluates to: 2025-03-06 12:11:04.",
        "method": "GET",
        "evidence": "1741243264",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 85,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "85",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/legal.md",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "94",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 100,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "100",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "95",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 80,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "80",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:376:14",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "96",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 91,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "91",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "97",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 59,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "59",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "98",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 101,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "101",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/styles.css",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "99",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 35,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "35",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "100",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 73,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "73",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:328:13",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "101",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 63,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "63",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/fileServer.js:55:18",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "102",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 89,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "89",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/suspicious_errors.yml",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "103",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "1741243264, which evaluates to: 2025-03-06 12:11:04.",
        "method": "GET",
        "evidence": "1741243264",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 90,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "90",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/incident-support.kdbx",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "104",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 100,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "100",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "105",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 111,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "111",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/polyfills.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "106",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 110,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "110",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/runtime.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "107",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 91,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "91",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "108",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "1741243264, which evaluates to: 2025-03-06 12:11:04.",
        "method": "GET",
        "evidence": "1741243264",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 59,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "59",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "109",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 80,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "80",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:376:14",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "110",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 101,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "101",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/styles.css",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "111",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "1741243258, which evaluates to: 2025-03-06 12:10:58.",
        "method": "GET",
        "evidence": "1741243258",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 35,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "35",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "112",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1741243264, which evaluates to: 2025-03-06 12:11:04.",
        "method": "GET",
        "evidence": "1741243264",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 89,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "89",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/suspicious_errors.yml",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "113",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 63,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "63",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/fileServer.js:55:18",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "114",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 73,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "73",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:328:13",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "115",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 112,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "112",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/vendor.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "116",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 100,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "100",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "117",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 111,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "111",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/polyfills.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "118",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 110,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "110",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/runtime.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "119",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 91,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "91",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "120",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 80,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "80",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:376:14",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "121",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 101,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "101",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/styles.css",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "122",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "public, max-age=0",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "sourceMessageId": 113,
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "113",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:365:14",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "123",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 114,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "114",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/main.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "124",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 73,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "73",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:328:13",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "125",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 63,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "63",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/fileServer.js:55:18",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "126",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 112,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "112",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/vendor.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "127",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 115,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "115",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "128",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 100,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "100",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "129",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 111,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "111",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/polyfills.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "130",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 110,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "110",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/runtime.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "131",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "1741243264, which evaluates to: 2025-03-06 12:11:04.",
        "method": "GET",
        "evidence": "1741243264",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 80,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "80",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:376:14",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "132",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 91,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "91",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/favicon_js.ico",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "133",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 101,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "101",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/styles.css",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "134",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 113,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "113",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:365:14",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "135",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 114,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "114",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/main.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "136",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "1741243264, which evaluates to: 2025-03-06 12:11:04.",
        "method": "GET",
        "evidence": "1741243264",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 63,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "63",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/fileServer.js:55:18",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "137",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1741243264, which evaluates to: 2025-03-06 12:11:04.",
        "method": "GET",
        "evidence": "1741243264",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 73,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "73",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:328:13",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "138",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 112,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "112",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/vendor.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "139",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 115,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "115",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "140",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 100,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "100",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/favicon_js.ico",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "141",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 110,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "110",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/runtime.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "142",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 111,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "111",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/polyfills.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "143",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 91,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "91",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "144",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 113,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "113",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:365:14",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "145",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 101,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "101",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/styles.css",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "146",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 114,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "114",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/main.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "147",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "public, max-age=0",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "sourceMessageId": 118,
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "118",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:286:9",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "148",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 125,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "125",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/polyfills.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "149",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 112,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "112",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/vendor.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "150",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 115,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "115",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "151",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 100,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "100",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "152",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "public, max-age=0",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "sourceMessageId": 119,
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "119",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/index.js:145:39",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "153",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 111,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "111",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/polyfills.js",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "154",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 110,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "110",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/runtime.js",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "155",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "1741243264, which evaluates to: 2025-03-06 12:11:04.",
        "method": "GET",
        "evidence": "1741243264",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 91,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "91",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "156",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 113,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "113",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:365:14",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "157",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 114,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "114",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/main.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "158",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 101,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "101",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/styles.css",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "159",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 118,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "118",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:286:9",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "160",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 125,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "125",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/polyfills.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "161",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 115,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "115",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "162",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 112,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "112",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/vendor.js",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "163",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "1741243264, which evaluates to: 2025-03-06 12:11:04.",
        "method": "GET",
        "evidence": "1741243264",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 100,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "100",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "164",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 119,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "119",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/index.js:145:39",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "165",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 111,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "111",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/polyfills.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "166",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 110,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "110",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/runtime.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "167",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 113,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "113",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:365:14",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "168",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 128,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "128",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/styles.css",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "169",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "1741243264, which evaluates to: 2025-03-06 12:11:04.",
        "method": "GET",
        "evidence": "1741243264",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 101,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "101",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/styles.css",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "170",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 118,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "118",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:286:9",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "171",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 114,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "114",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/main.js",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "172",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 125,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "125",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/polyfills.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "173",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 112,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "112",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/vendor.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "174",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 115,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "115",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/assets/public/favicon_js.ico",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "175",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 119,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "119",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/index.js:145:39",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "176",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 129,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "129",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/runtime.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "177",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 110,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "110",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/runtime.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "178",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 111,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "111",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/polyfills.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "179",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 128,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "128",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/styles.css",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "180",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 113,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "113",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:365:14",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "181",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 118,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "118",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:286:9",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "182",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 114,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "114",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/main.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "183",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 125,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "125",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/polyfills.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "184",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 130,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "130",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/vendor.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "185",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 115,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "115",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "186",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 112,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "112",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/vendor.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "187",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 119,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "119",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/index.js:145:39",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "188",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 129,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "129",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/runtime.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "189",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 131,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "131",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/main.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "190",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 128,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "128",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/styles.css",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "191",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 113,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "113",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:365:14",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "192",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "public, max-age=0",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "sourceMessageId": 132,
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "132",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/fileServer.js:39:13",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "193",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 118,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "118",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:286:9",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "194",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 114,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "114",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/main.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "195",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 130,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "130",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/vendor.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "196",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 125,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "125",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/polyfills.js",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "197",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 115,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "115",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "198",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 119,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "119",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/index.js:145:39",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "199",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "public, max-age=0",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "sourceMessageId": 133,
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "133",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:280:10",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "200",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 129,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "129",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/runtime.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "201",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 128,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "128",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/styles.css",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "202",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 131,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "131",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/main.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "203",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 132,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "132",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/fileServer.js:39:13",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "204",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 113,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "113",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:365:14",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "205",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 118,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "118",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:286:9",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "206",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 130,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "130",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/vendor.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "207",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 125,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "125",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/polyfills.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "208",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "public, max-age=0",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "sourceMessageId": 134,
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "134",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:421:3",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "209",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 119,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "119",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/index.js:145:39",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "210",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 129,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "129",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/runtime.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "211",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 133,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "133",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:280:10",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "212",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 135,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "135",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "213",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 132,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "132",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/fileServer.js:39:13",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "214",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 131,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "131",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/main.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "215",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 128,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "128",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/styles.css",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "216",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 118,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "118",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:286:9",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "217",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "public, max-age=0",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "sourceMessageId": 136,
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "136",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/layer.js:95:5",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "218",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 130,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "130",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/vendor.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "219",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 125,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "125",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/polyfills.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "220",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 134,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "134",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:421:3",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "221",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 119,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "119",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/index.js:145:39",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "222",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 133,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "133",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:280:10",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "223",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 135,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "135",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "224",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 129,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "129",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/runtime.js",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "225",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 131,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "131",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/main.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "226",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 128,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "128",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/styles.css",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "227",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 132,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "132",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/fileServer.js:39:13",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "228",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 118,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "118",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:286:9",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "229",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 136,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "136",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/layer.js:95:5",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "230",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 130,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "130",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/vendor.js",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "231",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 134,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "134",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:421:3",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "232",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 139,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "139",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/styles.css",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "233",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 119,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "119",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/index.js:145:39",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "234",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 135,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "135",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "235",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 133,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "133",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:280:10",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "236",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 129,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "129",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/runtime.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "237",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 132,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "132",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/fileServer.js:39:13",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "238",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 128,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "128",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/styles.css",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "239",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 131,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "131",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/main.js",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "240",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 136,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "136",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/layer.js:95:5",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "241",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 140,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "140",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/runtime.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "242",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 130,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "130",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/vendor.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "243",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 134,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "134",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:421:3",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "244",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 139,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "139",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/styles.css",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "245",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 141,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "141",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/polyfills.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "246",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 133,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "133",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:280:10",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "247",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 135,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "135",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "248",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 129,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "129",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/runtime.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "249",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 131,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "131",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/main.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "250",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 132,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "132",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/fileServer.js:39:13",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "251",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 136,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "136",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/layer.js:95:5",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "252",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 142,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "142",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/vendor.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "253",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 130,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "130",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/vendor.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "254",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 140,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "140",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/runtime.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "255",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 134,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "134",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:421:3",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "256",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 139,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "139",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/styles.css",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "257",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 141,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "141",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/polyfills.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "258",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 135,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "135",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/assets/public/favicon_js.ico",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "259",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 133,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "133",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:280:10",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "260",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 143,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "143",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/vendor.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "261",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 131,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "131",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/assets/public/main.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "262",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 132,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "132",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/fileServer.js:39:13",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "263",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 136,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "136",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/layer.js:95:5",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "264",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 142,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "142",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/vendor.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "265",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 140,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "140",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/runtime.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "266",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 144,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "144",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/runtime.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "267",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 139,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "139",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/styles.css",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "268",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 134,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "134",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:421:3",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "269",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 141,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "141",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/polyfills.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "270",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 135,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "135",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "271",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 143,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "143",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/vendor.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "272",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 133,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "133",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:280:10",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "273",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 132,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "132",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/fileServer.js:39:13",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "274",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 142,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "142",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/vendor.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "275",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 145,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "145",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/polyfills.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "276",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 136,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "136",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/layer.js:95:5",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "277",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 140,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "140",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/runtime.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "278",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 144,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "144",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/runtime.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "279",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 134,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "134",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:421:3",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "280",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 139,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "139",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/styles.css",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "281",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 141,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "141",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/polyfills.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "282",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 135,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "135",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "283",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 133,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "133",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:280:10",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "284",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 143,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "143",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/vendor.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "285",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 142,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "142",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/vendor.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "286",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 146,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "146",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/main.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "287",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 145,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "145",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/polyfills.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "288",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 136,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "136",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/layer.js:95:5",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "289",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 140,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "140",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/runtime.js",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "290",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 139,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "139",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/styles.css",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "291",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 144,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "144",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/runtime.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "292",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 134,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "134",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/index.js:421:3",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "293",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 141,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "141",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/polyfills.js",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "294",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 143,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "143",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/vendor.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "295",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 147,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "147",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/main.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "296",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 148,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "148",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "297",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 145,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "145",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/polyfills.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "298",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 136,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "136",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/layer.js:95:5",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "299",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 146,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "146",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/main.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "300",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 142,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "142",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/vendor.js",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "301",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 140,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "140",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/runtime.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "302",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 144,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "144",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/runtime.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "303",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 139,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "139",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/styles.css",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "304",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 157,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "157",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/runtime.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "305",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 141,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "141",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/polyfills.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "306",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 143,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "143",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/vendor.js",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "307",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 147,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "147",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/main.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "308",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 148,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "148",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "309",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 145,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "145",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/polyfills.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "310",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 146,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "146",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/main.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "311",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 142,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "142",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/vendor.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "312",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 140,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "140",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/runtime.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "313",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 158,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "158",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/styles.css",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "314",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 144,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "144",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/runtime.js",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "315",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 159,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "159",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/styles.css",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "316",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 157,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "157",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/runtime.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "317",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 141,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "141",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/polyfills.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "318",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 143,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "143",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/vendor.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "319",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 147,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "147",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/main.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "320",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 148,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "148",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "321",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 146,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "146",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/main.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "322",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 142,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "142",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/vendor.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "323",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 145,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "145",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/polyfills.js",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "324",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 158,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "158",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/styles.css",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "325",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 160,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "160",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/vendor.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "326",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 144,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "144",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/runtime.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "327",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 159,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "159",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/styles.css",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "328",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 157,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "157",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/runtime.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "329",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 143,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "143",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/vendor.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "330",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 161,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "161",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/polyfills.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "331",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 147,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "147",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/main.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "332",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 148,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "148",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "333",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 145,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "145",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/polyfills.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "334",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 146,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "146",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/main.js",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "335",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 158,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "158",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/styles.css",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "336",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 162,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "162",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/main.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "337",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 144,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "144",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/runtime.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "338",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 160,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "160",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/vendor.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "339",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 159,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "159",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/styles.css",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "340",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 157,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "157",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/runtime.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "341",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 161,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "161",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/polyfills.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "342",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 147,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "147",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/main.js",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "343",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 148,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "148",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/favicon_js.ico",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "344",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 145,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "145",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/polyfills.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "345",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 146,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "146",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/main.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "346",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 158,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "158",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/styles.css",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "347",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 162,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "162",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/main.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "348",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 160,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "160",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/vendor.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "349",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 159,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "159",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/styles.css",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "350",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 157,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "157",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/runtime.js",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "351",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 161,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "161",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/polyfills.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "352",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 148,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "148",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "353",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 147,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "147",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/main.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "354",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 146,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "146",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/assets/public/main.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "355",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 162,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "162",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/main.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "356",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 158,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "158",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/styles.css",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "357",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 160,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "160",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/vendor.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "358",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 157,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "157",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/runtime.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "359",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 159,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "159",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/styles.css",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "360",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 161,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "161",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/polyfills.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "361",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 148,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "148",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "362",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 147,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "147",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/build/routes/main.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "363",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 162,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "162",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/main.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "364",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 158,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "158",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/styles.css",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "365",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 160,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "160",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/vendor.js",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "366",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 159,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "159",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/styles.css",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "367",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 157,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "157",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/runtime.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "368",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 161,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "161",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/polyfills.js",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "369",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 158,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "158",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/express/lib/router/styles.css",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "370",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 162,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "162",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/main.js",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "371",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 160,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "160",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/vendor.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "372",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 159,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "159",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/styles.css",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "373",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 161,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "161",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/polyfills.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "374",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 162,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "162",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/main.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "375",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 160,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "160",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/vendor.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "376",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 161,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "161",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/polyfills.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "377",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 162,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "162",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/main.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "378",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 163,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "163",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/runtime.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "379",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 168,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "168",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/styles.css",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "380",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 166,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "166",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/main.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "381",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 165,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "165",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "382",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 167,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "167",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/vendor.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "383",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 164,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "164",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/polyfills.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "384",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 163,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "163",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/runtime.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "385",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 168,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "168",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/styles.css",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "386",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 165,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "165",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "387",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 164,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "164",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/polyfills.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "388",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 166,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "166",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/main.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "389",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 167,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "167",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/vendor.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "390",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 163,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "163",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/runtime.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "391",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 168,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "168",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/styles.css",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "392",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 164,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "164",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/polyfills.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "393",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 165,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "165",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "394",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 166,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "166",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/main.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "395",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 167,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "167",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/vendor.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "396",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 163,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "163",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/runtime.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "397",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 168,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "168",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/styles.css",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "398",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 165,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "165",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "399",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 164,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "164",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/polyfills.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "400",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 166,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "166",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/main.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "401",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 167,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "167",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/vendor.js",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "402",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 163,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "163",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/runtime.js",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "403",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 164,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "164",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/polyfills.js",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "404",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 165,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "165",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/assets/public/favicon_js.ico",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "405",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 168,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "168",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/styles.css",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "406",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 167,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "167",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/vendor.js",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "407",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 166,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "166",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/main.js",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "408",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 163,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "163",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/runtime.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "409",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 168,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "168",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/styles.css",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "410",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 165,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "165",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "411",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 164,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "164",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/polyfills.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "412",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 167,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "167",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/vendor.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "413",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 166,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "166",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/main.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "414",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 163,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "163",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/runtime.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "415",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 164,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "164",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/polyfills.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "416",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 168,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "168",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/styles.css",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "417",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 165,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "165",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/assets/public/favicon_js.ico",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "418",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 166,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "166",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/main.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "419",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1741243265, which evaluates to: 2025-03-06 12:11:05.",
        "method": "GET",
        "evidence": "1741243265",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 167,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "167",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/app/node_modules/serve-index/assets/public/vendor.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "420",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "public, max-age=0",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "sourceMessageId": 171,
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "171",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/announcement_encrypted.md",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "421",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 171,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "171",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/announcement_encrypted.md",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "422",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 171,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "171",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/announcement_encrypted.md",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "423",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "1741243264, which evaluates to: 2025-03-06 12:11:04.",
        "method": "GET",
        "evidence": "1741243264",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 171,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "171",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/announcement_encrypted.md",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "424",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 181,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "181",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/quarantine/juicy_malware_windows_64.exe.url",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "425",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 180,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "180",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/quarantine/juicy_malware_linux_arm_64.url",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "426",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 182,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "182",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/quarantine/juicy_malware_macos_64.url",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "427",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 178,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "178",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/quarantine/juicy_malware_linux_amd_64.url",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "428",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "sourceMessageId": 172,
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "172",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/quarantine",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "429",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 172,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "172",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/quarantine",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "430",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 182,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "182",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/quarantine/juicy_malware_macos_64.url",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "431",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 180,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "180",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/quarantine/juicy_malware_linux_arm_64.url",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "432",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 181,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "181",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/quarantine/juicy_malware_windows_64.exe.url",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "433",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 178,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "178",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/quarantine/juicy_malware_linux_amd_64.url",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "434",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "1741243270, which evaluates to: 2025-03-06 12:11:10.",
        "method": "GET",
        "evidence": "1741243270",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 180,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "180",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/quarantine/juicy_malware_linux_arm_64.url",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "435",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1741243270, which evaluates to: 2025-03-06 12:11:10.",
        "method": "GET",
        "evidence": "1741243270",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 182,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "182",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/quarantine/juicy_malware_macos_64.url",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "436",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1741243270, which evaluates to: 2025-03-06 12:11:10.",
        "method": "GET",
        "evidence": "1741243270",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 181,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "181",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/quarantine/juicy_malware_windows_64.exe.url",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "437",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1741243270, which evaluates to: 2025-03-06 12:11:10.",
        "method": "GET",
        "evidence": "1741243270",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 178,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "178",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/quarantine/juicy_malware_linux_amd_64.url",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "438",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 172,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "172",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/quarantine",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "439",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 172,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "172",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/quarantine",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "440",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "1741243264, which evaluates to: 2025-03-06 12:11:04.",
        "method": "GET",
        "evidence": "1741243264",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 172,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "172",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/quarantine",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "441",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "sourceMessageId": 183,
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "183",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "442",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 183,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "183",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "443",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 183,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "183",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "444",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<a href=\"\">ftp</a>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 183,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "183",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "445",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 183,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "183",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "446",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "1741243270, which evaluates to: 2025-03-06 12:11:10.",
        "method": "GET",
        "evidence": "1741243270",
        "pluginId": "10096",
        "cweid": "497",
        "confidence": "Low",
        "sourceMessageId": 183,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "183",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/ftp/",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "Reporting-Endpoints",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "447",
        "alertRef": "10096"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "HTTP/1.1 200 OK",
        "pluginId": "40035",
        "cweid": "538",
        "confidence": "Low",
        "sourceMessageId": 17,
        "wascid": "13",
        "description": "A sensitive file was identified as accessible or available. This may leak administrative, configuration, or credential information which can be leveraged by a malicious individual to further attack the system or conduct social engineering efforts.",
        "messageId": "1743",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/.hg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "POLICY_QA_FULL": "",
            "CWE-538": "https://cwe.mitre.org/data/definitions/538.html",
            "WSTG-v42-CONF-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/02-Configuration_and_Deployment_Management_Testing/05-Enumerate_Infrastructure_and_Application_Admin_Interfaces",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://blog.hboeck.de/archives/892-Introducing-Snallygaster-a-Tool-to-Scan-for-Secrets-on-Web-Servers.html",
        "solution": "Consider whether or not the component is actually required in production, if it isn't then disable it. If it is then ensure access to it requires appropriate authentication and authorization, or limit exposure to internal systems or specific source IPs, etc.",
        "alert": "Hidden File Found",
        "param": "",
        "attack": "",
        "name": "Hidden File Found",
        "risk": "Medium",
        "id": "448",
        "alertRef": "40035"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "HTTP/1.1 200 OK",
        "pluginId": "40035",
        "cweid": "538",
        "confidence": "Low",
        "sourceMessageId": 17,
        "wascid": "13",
        "description": "A sensitive file was identified as accessible or available. This may leak administrative, configuration, or credential information which can be leveraged by a malicious individual to further attack the system or conduct social engineering efforts.",
        "messageId": "1745",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/.bzr",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "POLICY_QA_FULL": "",
            "CWE-538": "https://cwe.mitre.org/data/definitions/538.html",
            "WSTG-v42-CONF-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/02-Configuration_and_Deployment_Management_Testing/05-Enumerate_Infrastructure_and_Application_Admin_Interfaces",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://blog.hboeck.de/archives/892-Introducing-Snallygaster-a-Tool-to-Scan-for-Secrets-on-Web-Servers.html",
        "solution": "Consider whether or not the component is actually required in production, if it isn't then disable it. If it is then ensure access to it requires appropriate authentication and authorization, or limit exposure to internal systems or specific source IPs, etc.",
        "alert": "Hidden File Found",
        "param": "",
        "attack": "",
        "name": "Hidden File Found",
        "risk": "Medium",
        "id": "449",
        "alertRef": "40035"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "HTTP/1.1 200 OK",
        "pluginId": "40035",
        "cweid": "538",
        "confidence": "Low",
        "sourceMessageId": 17,
        "wascid": "13",
        "description": "A sensitive file was identified as accessible or available. This may leak administrative, configuration, or credential information which can be leveraged by a malicious individual to further attack the system or conduct social engineering efforts.",
        "messageId": "1747",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/._darcs",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "POLICY_QA_FULL": "",
            "CWE-538": "https://cwe.mitre.org/data/definitions/538.html",
            "WSTG-v42-CONF-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/02-Configuration_and_Deployment_Management_Testing/05-Enumerate_Infrastructure_and_Application_Admin_Interfaces",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://blog.hboeck.de/archives/892-Introducing-Snallygaster-a-Tool-to-Scan-for-Secrets-on-Web-Servers.html",
        "solution": "Consider whether or not the component is actually required in production, if it isn't then disable it. If it is then ensure access to it requires appropriate authentication and authorization, or limit exposure to internal systems or specific source IPs, etc.",
        "alert": "Hidden File Found",
        "param": "",
        "attack": "",
        "name": "Hidden File Found",
        "risk": "Medium",
        "id": "450",
        "alertRef": "40035"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "HTTP/1.1 200 OK",
        "pluginId": "40035",
        "cweid": "538",
        "confidence": "Low",
        "sourceMessageId": 17,
        "wascid": "13",
        "description": "A sensitive file was identified as accessible or available. This may leak administrative, configuration, or credential information which can be leveraged by a malicious individual to further attack the system or conduct social engineering efforts.",
        "messageId": "1749",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/BitKeeper",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "POLICY_QA_FULL": "",
            "CWE-538": "https://cwe.mitre.org/data/definitions/538.html",
            "WSTG-v42-CONF-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/02-Configuration_and_Deployment_Management_Testing/05-Enumerate_Infrastructure_and_Application_Admin_Interfaces",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://blog.hboeck.de/archives/892-Introducing-Snallygaster-a-Tool-to-Scan-for-Secrets-on-Web-Servers.html",
        "solution": "Consider whether or not the component is actually required in production, if it isn't then disable it. If it is then ensure access to it requires appropriate authentication and authorization, or limit exposure to internal systems or specific source IPs, etc.",
        "alert": "Hidden File Found",
        "param": "",
        "attack": "",
        "name": "Hidden File Found",
        "risk": "Medium",
        "id": "451",
        "alertRef": "40035"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 2445,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "2445",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/assets",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "452",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 2466,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "2466",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/assets/public",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "453",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 2488,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "2488",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/assets",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "454",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 2504,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "2504",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/assets/public",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "455",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 2531,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "2531",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/assets",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "456",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 2544,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "2544",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/assets/public",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "457",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 2573,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "2573",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/assets",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "458",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 2583,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "2583",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/assets/public",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "459",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 2612,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "2612",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/assets",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "460",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 2617,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "2617",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/assets/public",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "461",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 2652,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "2652",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/assets",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "462",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 2655,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "2655",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/assets/public",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "463",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 2684,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "2684",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/assets/public",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "464",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 2686,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "2686",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/assets",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "465",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 2718,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "2718",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/assets",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "466",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 2722,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "2722",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/assets/public",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "467",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 2751,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "2751",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/assets",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "468",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 2759,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "2759",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/assets/public",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "469",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 2784,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "2784",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/assets",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "470",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 2798,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "2798",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/assets/public",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "471",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 2820,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "2820",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/assets",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "472",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 2834,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "2834",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/assets/public",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "473",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 2851,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "2851",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/assets",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "474",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 2863,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "2863",
        "inputVector": "",
        "url": "https://juice-shop.herokuapp.com/assets/public",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "475",
        "alertRef": "10104"
    }
]